#!/nix/store/zgcgq46222k32xab9skqkf904i173zpf-ruby-3.2.2/bin/ruby
#
# This file was generated by Nix.
#
# The application 'solargraph' is installed as part of a gem, and
# this file is here to facilitate running it.
#

ENV["BUNDLE_GEMFILE"] = "/nix/store/ms32d1pi2fbb4zlgkg1ajwd3hx680hmc-gemfile-and-lockfile/Gemfile"
ENV.delete 'BUNDLE_PATH'
ENV['BUNDLE_FROZEN'] = '1'
ENV['BUNDLE_IGNORE_CONFIG'] = '1'

Gem.paths = { 'GEM_HOME' => "/nix/store/f24i0rg5aqbfz8gkga4x0jgvxv8wsczb-solargraph-standrdrb-env/lib/ruby/gems/3.2.0" }

$LOAD_PATH.unshift "/nix/store/ghxb945b6y312hfdkzybrcy8zqy8l773-bundler-2.4.13/lib/ruby/gems/3.2.0/gems/bundler-2.4.13/lib"
binding.irb

require 'bundler'
# Monkey-patch out the check that Bundler performs to determine
# whether the bundler env is writable. It's not writable, even for
# root! And for this use of Bundler, it shouldn't be necessary since
# we're not trying to perform any package management operations, only
# produce a Gem path. Thus, we replace it with a method that will
# always return false, to squelch a warning from Bundler saying that
# sudo may be required.
module Bundler
  class <<self
    def requires_sudo?
      return false
    end
  end
end
Bundler.setup()

load Gem.bin_path("solargraph", "solargraph")
